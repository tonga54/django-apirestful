# Generated by Django 3.0 on 2020-01-10 18:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locales', '0001_initial'),
        ('servicios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nombre', models.CharField(max_length=64, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=64, verbose_name='Apellido')),
                ('fotoPerfil', models.ImageField(blank=True, null=True, upload_to='fotos_perfil_usuario', verbose_name='Foto perfil')),
                ('telefono', models.CharField(max_length=8, verbose_name='Telefono')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AtencionClienteEmpleadoLocal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costoDiferencial', models.FloatField(verbose_name='Costo diferencial')),
                ('fechaHoraReserva', models.DateTimeField(verbose_name='Fecha y hora reserva')),
                ('timestampComienzo', models.DateTimeField(verbose_name='Hora de comienzo/llegada')),
                ('timestampFinalizado', models.DateTimeField(verbose_name='Hora de finalizacion')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Atencion del cliente con el empleado en el local',
                'verbose_name_plural': 'Atenciones de los clientes con los empleados en el local',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='AtencionClienteTrabajador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costoDiferencial', models.FloatField(verbose_name='Costo diferencial')),
                ('fechaHoraReserva', models.DateTimeField(verbose_name='Fecha y hora reserva')),
                ('timestampComienzo', models.DateTimeField(verbose_name='Hora de comienzo/llegada')),
                ('timestampFinalizado', models.DateTimeField(verbose_name='Hora de finalizacion')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Atencion del cliente con el trabajador independiente',
                'verbose_name_plural': 'Atencion de los clientes con los trabajadores independientes',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128, verbose_name='Estado')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=32, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trabajador_cliente', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('descripcion', models.CharField(max_length=256, verbose_name='Descripcion')),
                ('aDomicilio', models.BooleanField(verbose_name='Trabaja a domicilio')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trabajador_usuario', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
            ],
            options={
                'verbose_name': 'Trabajador',
                'verbose_name_plural': 'Trabajadores',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Valoracion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripcion')),
                ('puntuacion', models.FloatField(verbose_name='Puntuacion')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
                ('AtencionClienteEmpleadoLocal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valoracion_tb_atencion_cliente_empleado_local', to='usuarios.AtencionClienteEmpleadoLocal')),
                ('AtencionClienteTrabajador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atencion_cliente_trabajador', to='usuarios.AtencionClienteTrabajador')),
            ],
            options={
                'verbose_name': 'Valoracion',
                'verbose_name_plural': 'Valoraciones',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TrabajadorServicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.FloatField(verbose_name='Precio')),
                ('duracion', models.TimeField(verbose_name='Duracion')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicio_trabajador', to='servicios.Servicio')),
            ],
            options={
                'verbose_name': 'Trabajador servicio',
                'verbose_name_plural': 'Trabajadores servicios',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='atencionclientetrabajador',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atecion_cliente_trabajador_estado', to='usuarios.Estado'),
        ),
        migrations.AddField(
            model_name='atencionclientetrabajador',
            name='servicio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajador_servicio_cliente', to='usuarios.TrabajadorServicio'),
        ),
        migrations.AddField(
            model_name='atencionclienteempleadolocal',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atencion_cliente_empleado_local_estado', to='usuarios.Estado'),
        ),
        migrations.AddField(
            model_name='atencionclienteempleadolocal',
            name='local',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atencion_cliente_empleado_local', to='locales.Local'),
        ),
        migrations.AddField(
            model_name='atencionclienteempleadolocal',
            name='servicio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajador_servicio_local_trabajador_servicio', to='usuarios.TrabajadorServicio'),
        ),
    ]
